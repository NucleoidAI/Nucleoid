#!/usr/bin/env node
const nucleoid = require("./nucleoid.js");

console.log("Nucleoid - Declarative Runtime System");
console.log("https://nucleoid.org/");
console.log();

let messages = [
  "To report an issue, go to \x1B[4mhttps://nucleoid.org/report/\x1B[0m",
  "Power of Declarative Programming Welcomes You with ❤",
  "Learn more at \x1B[4mhttps://nucleoid.org/tutorial/\x1B[0m",
  "Read articles at \x1B[4mhttps://medium.com/nucleoid\x1B[0m",
  "Join conversations at \x1B[4mhttps://reddit.com/r/nucleoid/\x1B[0m"
];

let random = Math.floor(Math.random() * messages.length);
console.log(messages[random]);
console.log();

process.stdout.write("> ");
process.openStdin().addListener("data", function(data) {
  let string = data.toString().trim();
  run(string);
  process.stdout.write("> ");
});

function run(string) {
  try {
    if (string == "exit") {
      process.exit();
    }

    let details = nucleoid.run(string, true);

    let result = details.result;
    let time = details.time;

    if (result instanceof Object) {
      result = JSON.stringify(result);
    }

    if (result) {
      console.log("%s \x1b[32m(%sms)\x1b[0m", result, time);
    } else {
      console.log("\x1b[32m(%sms)\x1b[0m", time);
    }
  } catch (error) {
    if (error instanceof Error) {
      console.log("%s", error.message);
    } else {
      console.log("%s", error);
    }
  }
}
